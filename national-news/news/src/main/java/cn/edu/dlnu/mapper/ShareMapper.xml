<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.mapper.ShareMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.pojo.Share" >
    <id column="share_id" property="shareId" jdbcType="INTEGER" />
    <result column="news_id" property="newsId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="share_date" property="shareDate" jdbcType="TIMESTAMP" />
    <result column="pic_id" property="picId" jdbcType="INTEGER" />
    <result column="parent_share_id" property="parentShareId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.edu.dlnu.pojo.Share" extends="BaseResultMap" >
    <result column="share_content" property="shareContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    share_id, news_id, user_id, share_date, pic_id, parent_share_id,share_content
  </sql>
  <sql id="Blob_Column_List" >
    share_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.edu.dlnu.pojo.ShareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.ShareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from share
    where share_id = #{shareId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from share
    where share_id = #{shareId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.pojo.ShareExample" >
    delete from share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.pojo.Share" >
    insert into share (share_id, news_id, user_id, 
      share_date, pic_id, parent_share_id, 
      share_content)
    values (#{shareId,jdbcType=INTEGER}, #{newsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{shareDate,jdbcType=TIMESTAMP}, #{picId,jdbcType=INTEGER}, #{parentShareId,jdbcType=INTEGER}, 
      #{shareContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.pojo.Share" >
    insert into share
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shareId != null" >
        share_id,
      </if>
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shareDate != null" >
        share_date,
      </if>
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="parentShareId != null" >
        parent_share_id,
      </if>
      <if test="shareContent != null" >
        share_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shareId != null" >
        #{shareId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null" >
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shareDate != null" >
        #{shareDate,jdbcType=TIMESTAMP},
      </if>
      <if test="picId != null" >
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="parentShareId != null" >
        #{parentShareId,jdbcType=INTEGER},
      </if>
      <if test="shareContent != null" >
        #{shareContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.pojo.ShareExample" resultType="java.lang.Integer" >
    select count(*) from share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update share
    <set >
      <if test="record.shareId != null" >
        share_id = #{record.shareId,jdbcType=INTEGER},
      </if>
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.shareDate != null" >
        share_date = #{record.shareDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.picId != null" >
        pic_id = #{record.picId,jdbcType=INTEGER},
      </if>
      <if test="record.parentShareId != null" >
        parent_share_id = #{record.parentShareId,jdbcType=INTEGER},
      </if>
      <if test="record.shareContent != null" >
        share_content = #{record.shareContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update share
    set share_id = #{record.shareId,jdbcType=INTEGER},
      news_id = #{record.newsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      share_date = #{record.shareDate,jdbcType=TIMESTAMP},
      pic_id = #{record.picId,jdbcType=INTEGER},
      parent_share_id = #{record.parentShareId,jdbcType=INTEGER},
      share_content = #{record.shareContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update share
    set share_id = #{record.shareId,jdbcType=INTEGER},
      news_id = #{record.newsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      share_date = #{record.shareDate,jdbcType=TIMESTAMP},
      pic_id = #{record.picId,jdbcType=INTEGER},
      parent_share_id = #{record.parentShareId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.pojo.Share" >
    update share
    <set >
      <if test="newsId != null" >
        news_id = #{newsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shareDate != null" >
        share_date = #{shareDate,jdbcType=TIMESTAMP},
      </if>
      <if test="picId != null" >
        pic_id = #{picId,jdbcType=INTEGER},
      </if>
      <if test="parentShareId != null" >
        parent_share_id = #{parentShareId,jdbcType=INTEGER},
      </if>
      <if test="shareContent != null" >
        share_content = #{shareContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where share_id = #{shareId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.dlnu.pojo.Share" >
    update share
    set news_id = #{newsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      share_date = #{shareDate,jdbcType=TIMESTAMP},
      pic_id = #{picId,jdbcType=INTEGER},
      parent_share_id = #{parentShareId,jdbcType=INTEGER},
      share_content = #{shareContent,jdbcType=LONGVARCHAR}
    where share_id = #{shareId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.pojo.Share" >
    update share
    set news_id = #{newsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      share_date = #{shareDate,jdbcType=TIMESTAMP},
      pic_id = #{picId,jdbcType=INTEGER},
      parent_share_id = #{parentShareId,jdbcType=INTEGER}
    where share_id = #{shareId,jdbcType=INTEGER}
  </update>
  <!--defined by user-->
  <resultMap id="ShareQueryVoMap" type="shareQueryVo" extends="ResultMapWithBLOBs">
    <result column="upNumber" property="upNumber" jdbcType="INTEGER"/>
    <result column="commentNumber" property="commentNumber" jdbcType="INTEGER"/>
    <result column="shareNumber" property="shareNumber" jdbcType="INTEGER"/>
  </resultMap>
  <select id="countByNewsId" parameterType="int" resultType="int">
    select count(*) from share where news_id=#{newsId}
  </select>
  <select id="selectAllByUserId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    from share
    WHERE user_id=#{userId}
    order by share_date desc
  </select>
  <select id="selectOneByUserId" resultMap="ResultMapWithBLOBs" parameterType="int">
      select
    <include refid="Base_Column_List" />
    from share
    WHERE user_id=#{userId}
    order by share_date desc limit 1
  </select>
  <select id="selectShareByPrimaryKey" parameterType="int" resultMap="ShareQueryVoMap">
    select (select count(*) from up u where u.share_id=s.share_id) as 'upNumber',
    (select count(*) from comment c where c.share_id=s.share_id) as 'commentNumber',
    (select count(*) from share sh where sh.parent_share_id=#{shareId}) as 'shareNumber',
    s.*
    from share s
    where s.share_id=#{shareId}

  </select>
  <insert id="insertAndGetId" parameterType="cn.edu.dlnu.pojo.Share" useGeneratedKeys="true" keyProperty="shareId" >
    insert into share (share_id, news_id, user_id,
    share_date, pic_id, parent_share_id,
    share_content)
    values (#{shareId,jdbcType=INTEGER}, #{newsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
    #{shareDate,jdbcType=TIMESTAMP}, #{picId,jdbcType=INTEGER}, #{parentShareId,jdbcType=INTEGER},
    #{shareContent,jdbcType=LONGVARCHAR})
  </insert>
  <!-- 相册功能的实现 -->
  <select id="selectByUserIdWithPicture" resultMap="ShareQueryVoMap" parameterType="int">
       select (select count(*) from up u where u.share_id=s.share_id) as 'upNumber',
      (select count(*) from `comment` c where c.share_id=s.share_id) as 'commentNumber',
      (select count(*) from `share` sh where sh.parent_share_id=s.share_id) as 'shareNumber',
      s.*
      from `share` s,picture p
      where s.user_id=#{userId} and s.share_id=p.share_id
      order by s.share_date desc;
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
      SELECT 
      <include refid="Base_Column_List"/>
      from share
  </select>
</mapper>