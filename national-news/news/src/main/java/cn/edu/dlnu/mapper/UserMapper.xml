<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.pojo.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_image" property="userImage" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="DATE" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="self_introduce" property="selfIntroduce" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, level, username, password, user_image, regist_time, birthday, age, email, self_introduce,
    sex
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.pojo.User" >
    insert into user (uid, level, username,
    password, user_image, regist_time,
    birthday, age, email,
    self_introduce, sex)
    values (#{uid,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}, #{registTime,jdbcType=DATE},
    #{birthday,jdbcType=DATE}, #{age,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
    #{selfIntroduce,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userImage != null" >
        user_image,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="selfIntroduce != null" >
        self_introduce,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=DATE},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduce != null" >
        #{selfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userImage != null" >
        user_image = #{record.userImage,jdbcType=VARCHAR},
      </if>
      <if test="record.registTime != null" >
        regist_time = #{record.registTime,jdbcType=DATE},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.selfIntroduce != null" >
        self_introduce = #{record.selfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set uid = #{record.uid,jdbcType=INTEGER},
    level = #{record.level,jdbcType=INTEGER},
    username = #{record.username,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    user_image = #{record.userImage,jdbcType=VARCHAR},
    regist_time = #{record.registTime,jdbcType=DATE},
    birthday = #{record.birthday,jdbcType=DATE},
    age = #{record.age,jdbcType=INTEGER},
    email = #{record.email,jdbcType=VARCHAR},
    self_introduce = #{record.selfIntroduce,jdbcType=VARCHAR},
    sex = #{record.sex,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.pojo.User" >
    update user
    <set >
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        user_image = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=DATE},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduce != null" >
        self_introduce = #{selfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.pojo.User" >
    update user
    set level = #{level,jdbcType=INTEGER},
    username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    user_image = #{userImage,jdbcType=VARCHAR},
    regist_time = #{registTime,jdbcType=DATE},
    birthday = #{birthday,jdbcType=DATE},
    age = #{age,jdbcType=INTEGER},
    email = #{email,jdbcType=VARCHAR},
    self_introduce = #{selfIntroduce,jdbcType=VARCHAR},
    sex = #{sex,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <!--defined by user-->
  <select id="validate" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.User" >
    select
    <include refid="Base_Column_List" />
    from user
    where username =#{username,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
  </select>
  <update id="updateInfo" parameterType="user">
    update user
    set username = #{username,jdbcType=VARCHAR},
    birthday = #{birthday,jdbcType=DATE},
    email = #{email,jdbcType=VARCHAR},
    self_introduce = #{selfIntroduce,jdbcType=VARCHAR},
    sex = #{sex,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <insert id="insertAndGetId" parameterType="cn.edu.dlnu.pojo.User" useGeneratedKeys="true" keyProperty="uid">
    insert into user (uid, level, username,
    password, user_image, regist_time,
    birthday, age, email,
    self_introduce, sex)
    values (#{uid,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}, #{registTime,jdbcType=DATE},
    #{birthday,jdbcType=DATE}, #{age,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
    #{selfIntroduce,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from user
  </select>
</mapper>