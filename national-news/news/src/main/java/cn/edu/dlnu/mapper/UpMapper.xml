<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.mapper.UpMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.pojo.Up" >
    <id column="upid" property="upid" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="news_id" property="newsId" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="pic_id" property="picId" jdbcType="INTEGER" />
    <result column="video_id" property="videoId" jdbcType="INTEGER" />
    <result column="up_and_down" property="upAndDown" jdbcType="INTEGER" />
    <result column="share_id" property="shareId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    upid, user_id, news_id, comment_id, pic_id, video_id, up_and_down, share_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.UpExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from up
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from up
    where upid = #{upid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from up
    where upid = #{upid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.pojo.UpExample" >
    delete from up
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.pojo.Up" >
    insert into up (upid, user_id, news_id, 
      comment_id, pic_id, video_id, 
      up_and_down, share_id)
    values (#{upid,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{newsId,jdbcType=INTEGER}, 
      #{commentId,jdbcType=INTEGER}, #{picId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}, 
      #{upAndDown,jdbcType=INTEGER}, #{shareId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.pojo.Up" >
    insert into up
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="upid != null" >
        upid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="videoId != null" >
        video_id,
      </if>
      <if test="upAndDown != null" >
        up_and_down,
      </if>
      <if test="shareId != null" >
        share_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="upid != null" >
        #{upid,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null" >
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="picId != null" >
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="upAndDown != null" >
        #{upAndDown,jdbcType=INTEGER},
      </if>
      <if test="shareId != null" >
        #{shareId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.pojo.UpExample" resultType="java.lang.Integer" >
    select count(*) from up
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update up
    <set >
      <if test="record.upid != null" >
        upid = #{record.upid,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.picId != null" >
        pic_id = #{record.picId,jdbcType=INTEGER},
      </if>
      <if test="record.videoId != null" >
        video_id = #{record.videoId,jdbcType=INTEGER},
      </if>
      <if test="record.upAndDown != null" >
        up_and_down = #{record.upAndDown,jdbcType=INTEGER},
      </if>
      <if test="record.shareId != null" >
        share_id = #{record.shareId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update up
    set upid = #{record.upid,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      news_id = #{record.newsId,jdbcType=INTEGER},
      comment_id = #{record.commentId,jdbcType=INTEGER},
      pic_id = #{record.picId,jdbcType=INTEGER},
      video_id = #{record.videoId,jdbcType=INTEGER},
      up_and_down = #{record.upAndDown,jdbcType=INTEGER},
      share_id = #{record.shareId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.pojo.Up" >
    update up
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null" >
        news_id = #{newsId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="picId != null" >
        pic_id = #{picId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="upAndDown != null" >
        up_and_down = #{upAndDown,jdbcType=INTEGER},
      </if>
      <if test="shareId != null" >
        share_id = #{shareId,jdbcType=INTEGER},
      </if>
    </set>
    where upid = #{upid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.pojo.Up" >
    update up
    set user_id = #{userId,jdbcType=INTEGER},
      news_id = #{newsId,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      pic_id = #{picId,jdbcType=INTEGER},
      video_id = #{videoId,jdbcType=INTEGER},
      up_and_down = #{upAndDown,jdbcType=INTEGER},
      share_id = #{shareId,jdbcType=INTEGER}
    where upid = #{upid,jdbcType=INTEGER}
  </update>
  <!--defined by user-->
  <select id="countByNewsId" parameterType="int" resultType="int">
    select count(*) from up where news_id=#{newsId};
  </select>
  <select id="countByCommentId" parameterType="int" resultType="int">
    SELECT COUNT(*) from up WHERE comment_id=#{commentId} and up_and_down=1
  </select>
  <delete id="countDown" parameterType="up">
    delete from up where share_id=#{shareId} and user_id=#{userId}
  </delete>
</mapper>