<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.mapper.CommentLevel2Mapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.pojo.CommentLevel2" >
    <id column="scid" property="scid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="publishtime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="up_id" property="upId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    scid, content, publishtime, comment_id, user_id, up_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.CommentLevel2Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment_level_2
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment_level_2
    where scid = #{scid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_level_2
    where scid = #{scid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.pojo.CommentLevel2Example" >
    delete from comment_level_2
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.pojo.CommentLevel2" >
    insert into comment_level_2 (scid, content, publishtime, 
      comment_id, user_id, up_id
      )
    values (#{scid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{publishtime,jdbcType=TIMESTAMP}, 
      #{commentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{upId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.pojo.CommentLevel2" >
    insert into comment_level_2
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scid != null" >
        scid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="publishtime != null" >
        publishtime,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="upId != null" >
        up_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scid != null" >
        #{scid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="upId != null" >
        #{upId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.pojo.CommentLevel2Example" resultType="java.lang.Integer" >
    select count(*) from comment_level_2
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment_level_2
    <set >
      <if test="record.scid != null" >
        scid = #{record.scid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.publishtime != null" >
        publishtime = #{record.publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.upId != null" >
        up_id = #{record.upId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment_level_2
    set scid = #{record.scid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      publishtime = #{record.publishtime,jdbcType=TIMESTAMP},
      comment_id = #{record.commentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      up_id = #{record.upId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.pojo.CommentLevel2" >
    update comment_level_2
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null" >
        publishtime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="upId != null" >
        up_id = #{upId,jdbcType=INTEGER},
      </if>
    </set>
    where scid = #{scid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.pojo.CommentLevel2" >
    update comment_level_2
    set content = #{content,jdbcType=VARCHAR},
      publishtime = #{publishtime,jdbcType=TIMESTAMP},
      comment_id = #{commentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      up_id = #{upId,jdbcType=INTEGER}
    where scid = #{scid,jdbcType=INTEGER}
  </update>
  <select id="selectByCommentId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from comment_level_2
    WHERE  comment_id=#{commentId} or up_id=#{commentId}
  </select>
  <select id="countByCommentId" parameterType="java.lang.Integer" resultType="int">
    select count(*) from comment_level_2 c where c.comment_id=#{commentId} or c.up_id=#{commentId}
  </select>
</mapper>