<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.pojo.Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="video_id" property="videoId" jdbcType="INTEGER" />
    <result column="pic_id" property="picId" jdbcType="INTEGER" />
    <result column="news_id" property="newsId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="share_id" property="shareId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    comment_id, video_id, pic_id, news_id, user_id, content, publish_time, share_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.pojo.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.pojo.Comment" >
    insert into comment (comment_id, video_id, pic_id, 
      news_id, user_id, content, 
      publish_time, share_id)
    values (#{commentId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}, #{picId,jdbcType=INTEGER}, 
      #{newsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{shareId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="videoId != null" >
        video_id,
      </if>
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="shareId != null" >
        share_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="picId != null" >
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null" >
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shareId != null" >
        #{shareId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.pojo.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.videoId != null" >
        video_id = #{record.videoId,jdbcType=INTEGER},
      </if>
      <if test="record.picId != null" >
        pic_id = #{record.picId,jdbcType=INTEGER},
      </if>
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shareId != null" >
        share_id = #{record.shareId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      video_id = #{record.videoId,jdbcType=INTEGER},
      pic_id = #{record.picId,jdbcType=INTEGER},
      news_id = #{record.newsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      share_id = #{record.shareId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.pojo.Comment" >
    update comment
    <set >
      <if test="videoId != null" >
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="picId != null" >
        pic_id = #{picId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null" >
        news_id = #{newsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shareId != null" >
        share_id = #{shareId,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.pojo.Comment" >
    update comment
    set video_id = #{videoId,jdbcType=INTEGER},
      pic_id = #{picId,jdbcType=INTEGER},
      news_id = #{newsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      share_id = #{shareId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <!--defined by user-->
  <resultMap id="BaseResultMapCustom" type="commentCustom" extends="BaseResultMap">
    <result column="commentNumber" property="commentNumber" jdbcType="INTEGER" />
  </resultMap>
  <select id="countByNewsId" parameterType="java.lang.Integer" resultType="int">
    select count(*) from comment c where c.news_id=#{newsId}
  </select>

  <select id="selectByNewsId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM comment
    WHERE  news_id=#{newsId}
  </select>

  <select id="selectByShareId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM comment
    WHERE  share_id=#{shareId}
  </select>

  <select id="selectHotCommentNews" resultMap="BaseResultMapCustom">
    select count(*) as 'commentNumber',
    <include refid="Base_Column_List" />
    from comment c
    where <![CDATA[ (TO_DAYS(now())-TO_DAYS(c.publish_time)<1) ]]> and c.news_id != ''
    group by c.news_id
    order by 'commentNumber' desc;
  </select>
</mapper>