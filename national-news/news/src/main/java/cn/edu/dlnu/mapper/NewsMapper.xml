<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.mapper.NewsMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.pojo.News" >
    <id column="news_id" property="newsId" jdbcType="INTEGER" />
    <result column="editor_id" property="editorId" jdbcType="INTEGER" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="keyword" property="keyword" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.edu.dlnu.pojo.News" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <!--defined by user-->
  <resultMap id="CustomBaseResultMap" type="cn.edu.dlnu.pojo.NewsCustom" extends="ResultMapWithBLOBs">
    <result column="picnumber" property="picNumber" jdbcType="INTEGER" />
    <result column="upnumber" property="upNumber" jdbcType="INTEGER" />
    <result column="commentnumber" property="commentNumber" jdbcType="INTEGER" />
    <result column="sharenumber" property="shareNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    news_id, editor_id, publish_time, title, keyword, category_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.edu.dlnu.pojo.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.pojo.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where news_id = #{newsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where news_id = #{newsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.pojo.NewsExample" >
    delete from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.pojo.News" >
    insert into news (news_id, editor_id, publish_time, 
      title, keyword, category_id, 
      content)
    values (#{newsId,jdbcType=INTEGER}, #{editorId,jdbcType=INTEGER}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{title,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.pojo.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="editorId != null" >
        editor_id,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="editorId != null" >
        #{editorId,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.pojo.NewsExample" resultType="java.lang.Integer" >
    select count(*) from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news
    <set >
      <if test="record.newsId != null" >
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.editorId != null" >
        editor_id = #{record.editorId,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.keyword != null" >
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update news
    set news_id = #{record.newsId,jdbcType=INTEGER},
      editor_id = #{record.editorId,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news
    set news_id = #{record.newsId,jdbcType=INTEGER},
      editor_id = #{record.editorId,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.pojo.News" >
    update news
    <set >
      <if test="editorId != null" >
        editor_id = #{editorId,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.dlnu.pojo.News" >
    update news
    set editor_id = #{editorId,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.pojo.News" >
    update news
    set editor_id = #{editorId,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <!--defined by user-->
  <insert id="insertAndGetId" parameterType="cn.edu.dlnu.pojo.News" useGeneratedKeys="true" keyProperty="newsId" >
    insert into news (editor_id, publish_time,
    title, keyword, category_id,
    content)
    values (#{editorId,jdbcType=INTEGER}, #{publishTime,jdbcType=TIMESTAMP},
    #{title,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER},
    #{content,jdbcType=LONGVARCHAR})
  </insert>
  <select id="selectByCategory" parameterType="java.lang.Integer" resultMap="CustomBaseResultMap">
    select
    n.news_id, n.editor_id, n.publish_time, n.title, n.keyword, n.category_id,n.content
    ,(select count(*) from picture p where n.news_id = p.news_id) as picnumber
    from
    news n
    where n.category_id=#{categoryId,jdbcType=INTEGER}
  </select>
  <select id="selectInOneDay" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from
    news n
    where
    <![CDATA[ TO_DAYS(now())-TO_DAYS(n.publish_time)<=30    ]]>
    order by n.publish_time desc;
  </select>
  <!-- 点赞排序功能的实现 -->
  <select id="selectHotNews" resultMap="CustomBaseResultMap">
    SELECT COUNT(*) as 'upnumber',
    n.news_id, n.editor_id, n.publish_time, n.title, n.keyword, n.category_id
    from up u, news n
    WHERE n.news_id = u.news_id
    AND
    <![CDATA[ (TO_DAYS(now())-TO_DAYS(n.publish_time)<=1)    ]]>
    group by n.news_id
    ORDER  BY 'upnumber' desc
    limit 4
  </select>
  <select id="selectNewsByEditorId" parameterType="int" resultMap="CustomBaseResultMap">
     select (SELECT count(*) from `comment` c where c.news_id=n.news_id) as 'commentnumber',
    (select count(*) from up u where u.news_id=n.news_id) as 'upnumber',
    (SELECT count(*) from share s where s.news_id=n.news_id) as'sharenumber',
     n.*
     from news n
    where n.editor_id=#{uid}
    ORDER BY n.publish_time desc;
  </select>


  <select id="selectByKeyWord" resultMap="ResultMapWithBLOBs" parameterType="news">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from
    news
    where
    keyword like '%${keyword}%'
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    news
  </select>
</mapper>